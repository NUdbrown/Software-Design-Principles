import java.util.ArrayList;
import java.util.List;

import edu.neumont.csc415.Desktop;
import edu.neumont.csc415.DesktopColor;
import edu.neumont.csc415.DesktopGraphics;
import edu.neumont.csc415.IPaintable;
import edu.neumont.csc415.Point;

public class Window implements IPaintable, IModelObserver{
 //Have the window draw the window as a simple colored rectangle. [check] 
//Register a controller class with the window to receive keystrokes and place 
	//the corresponding characters in the window.

	private List<Character> theChars = new ArrayList<Character>();
	private DesktopGraphics dgraphics;
	private Desktop desktop;
	private Model model;
	private final int WIDTH = 100;
	private final int HEIGHT = 600;
	private char[][] characters = new char[WIDTH][HEIGHT];
	
	
	public Window(Desktop desktop, Model model) {	
		this.desktop = desktop;
		this.model = model;
	}

	@Override
	public void paint(DesktopGraphics arg0) {
		this.dgraphics = arg0;
		Point topLeft = new Point(WIDTH,300);
		Point bottomRight = new Point(HEIGHT, 0);
		arg0.fillRectangle(topLeft,bottomRight , DesktopColor.LIGHT_GRAY);	
		//char width & height
	
			for(int col = 0; col < WIDTH; col++){
				for(int row = 0; row < HEIGHT; row++){					
					Point charPosition = new Point(col,row);
					char c = characters[col][row];
					arg0.drawChar(c, charPosition, DesktopColor.MAGENTA);
				}
			}
			
			
		
	}

	//fill in the chars in the 2D
	private void fillChar2D(){
		for(int row = 0; row <= WIDTH; row++){
			for(int row = 0; row <= HEIGHT; row++){
				characters[row][row] = model.getAllTheCharacters().get(row);			
			}
		}		
	}
	
	
	//take in char , send to list
	@Override
	public void update() {	
		fillChar2D();
		desktop.repaint();		
	}



	
	
}
